#include <Arduino.h>

// ---- Definições de pinos ----
#define trigPin 5
#define echoPin 6
#define buzzer1 9     // primeiro buzzer
#define buzzer2 13    // segundo buzzer
#define led 11
#define soundSensor A0

// ---- Variáveis ----
long duracao;     // tempo do pulso ultrassônico
int distancia;    // distância em cm
int soundValue;   // valor lido do sensor de som

// ---- Setup ----
void setup() {
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(buzzer1, OUTPUT);
  pinMode(buzzer2, OUTPUT);
  pinMode(led, OUTPUT);
  pinMode(soundSensor, INPUT);

  Serial.begin(9600); // monitor serial
  Serial.println("=== SISTEMA INICIADO ===");
}

// ---- Função para medir distância com HC-SR04 ----
void medirDistancia() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  duracao = pulseIn(echoPin, HIGH);
  distancia = duracao * 0.034 / 2;  // converte em centímetros

  // Tratamento: se distância inválida, forçar 0 (sem objeto)
  if (distancia < 2 || distancia > 400) {
    distancia = 0;
  }
}

// ---- Função para deficiência visual (buzzer proporcional com pulsos) ----
bool sensorVisual() {
  if (distancia > 0 && distancia <= 30) {
    // Quanto mais perto, maior a intensidade
    int intensidade = map(distancia, 30, 0, 30, 255);
    intensidade = constrain(intensidade, 30, 255);

    // Pulsos perceptíveis em ambos os buzzers
    analogWrite(buzzer1, intensidade);
    analogWrite(buzzer2, intensidade);
    delay(100);
    analogWrite(buzzer1, 0);
    analogWrite(buzzer2, 0);
    delay(100);

    return true; // sinaliza que o aviso foi acionado
  } else {
    analogWrite(buzzer1, 0);
    analogWrite(buzzer2, 0);
    return false;
  }
}

// ---- Função para deficiência auditiva/motora (níveis de som) ----
void sensorAuditivoMotor() {
  soundValue = analogRead(soundSensor);

  // Print bonito no Serial Monitor
  Serial.println("\n--- LEITURA ---");
  Serial.print("Distância: ");
  Serial.print(distancia);
  Serial.println(" cm");
  Serial.print("Som captado: ");
  Serial.println(soundValue);
  Serial.println("---------------");

  if (soundValue > 40 && soundValue <= 50) {  // barulho moderado
    digitalWrite(led, HIGH);
    delay(5000);
    digitalWrite(led, LOW);
  } 
  else if (soundValue > 50) {  // barulho alto/grito
    digitalWrite(led, HIGH);   
    // Som forte nos dois buzzers
    tone(buzzer1, 400); // grave = mais alto
    tone(buzzer2, 400);
    delay(5000);
    noTone(buzzer1);
    noTone(buzzer2);
    digitalWrite(led, LOW);
  }
}

// ---- Loop principal ----
void loop() {
  medirDistancia();

  // Se objeto próximo, prioridade é alerta visual (buzzer pulsado)
  if (!sensorVisual()) {
    // Se nada perto, verifica som
    sensorAuditivoMotor();
  }

  delay(50);
}
